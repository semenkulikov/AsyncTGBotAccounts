from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

def get_channels_keyboard() -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –∫–∞–Ω–∞–ª",
        callback_data="add_channel"
    ))
    builder.add(InlineKeyboardButton(
        text="üìã –ú–æ–∏ –∫–∞–Ω–∞–ª—ã",
        callback_data="my_channels"
    ))
    builder.adjust(1)
    return builder.as_markup()

def get_channel_actions_keyboard(channel_id: int, current_index: int, total_channels: int) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    
    # –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    if total_channels > 1:
        if current_index > 0:
            builder.add(InlineKeyboardButton(
                text="‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–π",
                callback_data=f"prev_channel_{channel_id}"
            ))
        if current_index < total_channels - 1:
            builder.add(InlineKeyboardButton(
                text="–°–ª–µ–¥—É—é—â–∏–π ‚û°Ô∏è",
                callback_data=f"next_channel_{channel_id}"
            ))
        builder.adjust(2)
    
    # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    builder.add(InlineKeyboardButton(
        text="‚ùå –£–¥–∞–ª–∏—Ç—å",
        callback_data=f"delete_channel_{channel_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Ä–µ–∞–∫—Ü–∏—é",
        callback_data=f"change_reaction_{channel_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥",
        callback_data="back_to_channels"
    ))
    builder.adjust(1)
    return builder.as_markup()

def get_reactions_keyboard(reactions: list[tuple[str, str]], selected_reactions: list[str] = None) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ —Ä–µ–∞–∫—Ü–∏—è–º–∏"""
    if selected_reactions is None:
        selected_reactions = []
        
    builder = InlineKeyboardBuilder()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —Ä–µ–∞–∫—Ü–∏–π
    for emoji, callback_data in reactions:
        # –ï—Å–ª–∏ —Ä–µ–∞–∫—Ü–∏—è —É–∂–µ –≤—ã–±—Ä–∞–Ω–∞, –¥–æ–±–∞–≤–ª—è–µ–º –≥–∞–ª–æ—á–∫—É
        text = f"{'‚úÖ ' if emoji in selected_reactions else ''}{emoji}"
        builder.add(InlineKeyboardButton(text=text, callback_data=callback_data))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ"
    builder.add(InlineKeyboardButton(
        text="‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ" if len(selected_reactions) == len(reactions) else "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å–µ",
        callback_data="use_all_reactions"
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ó–∞–≤–µ—Ä—à–∏—Ç—å"
    builder.add(InlineKeyboardButton(
        text="üíæ –ó–∞–≤–µ—Ä—à–∏—Ç—å",
        callback_data="finish_reactions"
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    builder.add(InlineKeyboardButton(
        text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
        callback_data="back_to_channels"
    ))
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ (5 –≤ —Ä—è–¥ –¥–ª—è —Ä–µ–∞–∫—Ü–∏–π, –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø–æ –æ–¥–Ω–æ–π)
    builder.adjust(5, 1, 1, 1)
    
    return builder.as_markup() 

